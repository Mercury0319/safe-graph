# -*- coding: utf-8 -*-
"""SOM.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_ZsK-qDHK4Dxj7A3soq_KwCbcqr7LFIe

#Self Organizing Map

##Installing MiniSom Package
"""

!pip install minisom

"""## Importing the libraries

"""

import numpy as np
import pandas as pd

"""Mounting Google Drive

"""

from google.colab import drive
drive.mount('/content/gdrive')

"""Setting up directory"""

# Commented out IPython magic to ensure Python compatibility.
# %cd gdrive/My\ Drive/Colab Notebooks

"""## Importing the dataset"""

dataset = pd.read_csv('Credit_Card_Applications.csv')
X = dataset.iloc[:, 1:-1].values
y = dataset.iloc[:, -1].values

"""## Feature Scaling

"""

from sklearn.preprocessing import MinMaxScaler
sc = MinMaxScaler()
X = sc.fit_transform(X)

"""##Training the SOM

"""

from minisom import MiniSom
som = MiniSom(x=10, y=10, input_len= 14, sigma= 1.0, learning_rate = 0.5, random_seed = 29)
som.random_weights_init(X)
som.train_random(data = X, num_iteration = 100000)

"""##Visualizing the results

"""

from pylab import bone, pcolor, colorbar, plot, show
bone()
pcolor(som.distance_map().T)
colorbar()
markers = ['o', 's']
colors = ['r', 'g']
for i, x in enumerate(X):
    w = som.winner(x)
    plot(w[0] + 0.5,
         w[1] + 0.5,
         markers[y[i]],
         markeredgecolor = colors[y[i]],
         markerfacecolor = 'None',
         markersize = 10,
         markeredgewidth = 2)
show()

"""## Finding the frauds

"""

mappings = som.win_map(X)
frauds = np.concatenate((mappings[(1,5)], mappings[(2,6)], mappings[(6,3)]), axis = 0)
frauds.shape[0]

"""##Mapping back to the fraud IDs


"""

indx=[]
for i in range(frauds.shape[0]):
  for j in range(X.shape[0]):
    if (frauds[i,:]== X[j,:]).all():
      indx.append(j)
print(indx)

"""###Printing the fraudulent clients"""

print('Fraud Customer IDs')
for i in indx:
  print(dataset.iloc[i,0],y[i])